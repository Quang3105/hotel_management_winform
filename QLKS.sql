CREATE DATABASE QLKS
IF EXISTS (select * from master.sys.databases where name = 'QLKS') USE QLKS
GO

--TẠO BẢNG NHÂN VIÊN
CREATE TABLE NHANVIEN(
MANHANVIEN CHAR(10) NOT NULL PRIMARY KEY,
MATKHAU VARCHAR(20) NOT NULL,
HOTEN NVARCHAR(100) NOT NULL,
NGAYSINH DATE NOT NULL,
GIOITINH BIT NOT NULL ,
DIACHI NVARCHAR(100) NOT NULL,
SODIENTHOAI VARCHAR(20),
NGAYVAOLAM DATE NOT NULL,
);

INSERT INTO NHANVIEN
VALUES 
('NV01','123456',N'Nguyễn Thị Nụ','10/11/2000',1,N'Đống Đa-Hà Nội','0973287666','11/9/2020'),
('NV02','123456',N'Trần Văn Sang','1/1/2000',0,N'Thanh Trì-Hà Nội','0972873536','11/11/2020'),
('NV03','123456',N'Trần Tuấn Anh','1/20/2001',0,N'Hoàn Kiếm-Hà Nội','0273347611','11/1/2021'),
('NV04','123456',N'Nguyễn Thế Anh','3/2/1999',0,N'Nam Từ Liêm- Hà Nội','0273287666','11/2/2021'),
('NV05','123456',N'Lê Thị Thúy','1/2/2001',1,N'Cầu Giấy- Hà Nội','0973287999','11/12/2021');

-- TẠO BẢNG LOAIPHONG
CREATE TABLE LOAIPHONG(
MALOAIPHONG CHAR(10) NOT NULL PRIMARY KEY,
LOAIPHONG NVARCHAR(50) NOT NULL,
GIATIEN MONEY NOT NULL,
);
INSERT INTO LOAIPHONG
VALUES 
('MLP01',N'Phòng vip',50),
('MLP02',N'Phòng tầm trung',30),
('MLP03',N'Phòng thường',10);


--TẠO BẢNG DMPHONG
CREATE TABLE DMPHONG
(
MAPHONG CHAR(10) NOT NULL PRIMARY KEY,
MALOAIPHONG CHAR(10) NOT NULL,
TINHTRANG BIT,
CONSTRAINT KN_DMPHONG FOREIGN KEY (MALOAIPHONG) REFERENCES LOAIPHONG(MALOAIPHONG),
);
INSERT INTO DMPHONG
VALUES
('MP01','MLP01',1),
('MP02','MLP01',1),
('MP03','MLP01',1),
('MP04','MLP01',1),
('MP05','MLP01',1),
('MP06','MLP02',1),
('MP07','MLP02',1),
('MP08','MLP02',1),
('MP09','MLP02',1),
('MP10','MLP02',1),
('MP11','MLP03',1),
('MP12','MLP03',1),
('MP13','MLP03',1),
('MP14','MLP03',1),
('MP15','MLP03',0),
('MP17','MLP03',0),
('MP18','MLP03',0),
('MP19','MLP03',0),
('MP20','MLP03',0),
('MP21','MLP03',0),
('MP22','MLP03',0),
('MP23','MLP03',0),
('MP24','MLP03',0);



--TẠO BẢNG KHACHHANG
CREATE TABLE KHACHHANG(
MAKHACH CHAR(10) NOT NULL PRIMARY KEY,
HOTEN NVARCHAR(100) NOT NULL,
GIOITINH BIT,
DIACHI NVARCHAR(50),
CMND CHAR(20),
DIENTHOAI VARCHAR(15),
);

INSERT INTO KHACHHANG
VALUES
('K01',N'Lê Đức Sơn',1,N'Đà Nẵng','030301009999','0987654678'),
('K02',N'Nguyễn Thị Hoa ',0,N'Đà Lạt','0303010000','0987654999'),
('K03',N'Trần Vũ Anh ',1,N'Hà Nội','030301066666','09876543677'),
('K04',N'Trần Thanh Hoa ',0,N'Hồ Chí Minh','03030999992','09876543365'),
('K05',N'Hoàng Thị Thúy ',0,N'Hải Phòng','030309999999','0987654666'),
('K06',N'Vũ Trọng Kiên',1,N'Hải Phòng','0303010122344','0987654323'),
('K07',N'Lê Văn Đô ',1,N'Hà Nội','003987654333','0987654777'),
('K08',N'Nguyễn Hồng',0,N'Hà Nam','0303023231221','0987654314'),
('K09',N'Hoàng Sơn ',1,N'Đà Nẵng','03030323115657','0987654133'),
('K10',N'Trần Thanh Nhàn ',0,N'Đà Nẵng','030301023254643','0987654333'),
('K11',N'Hoàng Sơn Tùng ',1,N'Đà Nẵng','03030323115657','0987654133'),
('K12',N'Hoàng Thùy Linh ',1,N'Đà Lạt','03030233115222','0987654133'),
('K13',N'Vũ Tiến Đạt ',1,N'Đà Nẵng','03030323115657','0987654111'),
('K14',N'Hoàng Sơn Đạt ',1,N'Hà Nội','0303032311527','0987654100');


--TẠO BẢNG THUÊ PHÒNG
CREATE TABLE THUEPHONG(
SHDTHUEPHONG NUMERIC IDENTITY(1,1) PRIMARY KEY,
MANHANVIEN CHAR(10) NOT NULL,
MAPHONG CHAR(10) NOT NULL,
NGAYTHUE DATE NOT NULL,
NGAYTRA DATE,
CONSTRAINT KN_THUEPHONG_MANHANVIEN FOREIGN KEY (MANHANVIEN) REFERENCES NHANVIEN(MANHANVIEN),
CONSTRAINT KN_THUEPHONG_MAPHONG FOREIGN KEY (MAPHONG) REFERENCES DMPHONG(MAPHONG),
);

INSERT INTO THUEPHONG(MANHANVIEN, MAPHONG, NGAYTHUE,NGAYTRA)
VALUES
('NV01','MP01','10/12/2021','1/1/2022'),
('NV02','MP02','11/24/2021','1/9/2022'),
('NV03','MP03','11/24/2021','11/1/2022'),
('NV04','MP04','11/25/2021','1/2/2022'),
('NV03','MP05','11/26/2021','12/26/2021'),
('NV02','MP06','12/22/2021','1/1/2022'),
('NV01','MP07','12/23/2021','1/23/2022'),
('NV01','MP08','12/23/2021','1/23/2022'),
('NV04','MP09','12/23/2021','1/23/2022'),
('NV01','MP10','12/24/2021','1/24/2022'),
('NV02','MP11','12/24/2021','1/24/2022'),
('NV03','MP12','12/25/2021','1/25/2022'),
('NV04','MP13','12/25/2021','1/25/2022'),
('NV05','MP14','12/26/2021','1/26/2022');

-- TẠO BẢNG CHITIETTHUEPHONG
CREATE TABLE CHITIETTHUEPHONG(
SHDTHUEPHONG NUMERIC NOT NULL,
MAKHACH CHAR(10) NOT NULL
CONSTRAINT KC_CHITIETTHUEPHONG PRIMARY KEY (SHDTHUEPHONG,MAKHACH),
CONSTRAINT KN_CHITIETTHUEPHONG_SHDTHUEPHONG FOREIGN KEY (SHDTHUEPHONG) REFERENCES THUEPHONG(SHDTHUEPHONG),
CONSTRAINT KN_CHITIETTHUEPHONG_MAKHACH FOREIGN KEY (MAKHACH) REFERENCES KHACHHANG(MAKHACH),
);

INSERT INTO CHITIETTHUEPHONG
VALUES
(1,'K01'),
(2,'K02'),
(3,'K03'),
(4,'K04'),
(5,'K05'),
(6,'K06'),
(7,'K07'),
(8,'K08'),
(9,'K09'),
(10,'K10'),
(11,'K11'),
(12,'K12'),
(13,'K13'),
(14,'K14');


--TẠO BẢNG HDTHANHTOANPHONG
CREATE TABLE HDTHANHTOANPHONG
(
SHDTHANHTOAN NUMERIC IDENTITY(1,1) PRIMARY KEY,
SHDTHUEPHONG NUMERIC  NOT NULL,
MANHANVIEN CHAR(10) NOT NULL,
NGAYTHANHTOAN DATE NOT NULL,
TIENPHONG MONEY NOT NULL,
CONSTRAINT KN_HDTHANHTOANPHONG_SHDTHUEPHONG FOREIGN KEY (SHDTHUEPHONG) REFERENCES THUEPHONG(SHDTHUEPHONG),
CONSTRAINT KN_HDTHANHTOANPHONG_MANHANVIEN FOREIGN KEY (MANHANVIEN) REFERENCES NHANVIEN(MANHANVIEN),
);

INSERT INTO HDTHANHTOANPHONG(SHDTHUEPHONG, MANHANVIEN,NGAYTHANHTOAN, TIENPHONG)
VALUES
(1, 'NV01','1/1/2022',200),
(2, 'NV02','1/9/2022',200),
(3, 'NV03','11/1/2022',200),
(4, 'NV04','1/2/2022',200),
(6, 'NV01','1/1/2022',200);
--TẠO BẢNG THIETBI_DV
CREATE TABLE THIETBI_DV
(
MATHIETBI CHAR(10) NOT NULL PRIMARY KEY,
TENTHIETBI NVARCHAR(50) NOT NULL,
DVT NVARCHAR(10),
GIATIEN MONEY NOT NULL,
);

INSERT INTO THIETBI_DV
VALUES
('MTB01',N'Điều hòa',N'chiếc',400),
('MTB02',N'Tivi',N'chiếc',300),
('MTB03',N'Giường',N'chiếc',100),
('MTB04',N'Máy chơi game',N'chiếc',10),
('MTB05',N'Bình nóng lạnh',N'chiếc',500),
('MTB06',N'Đèn điện',N'chiếc',10),
('MTB07',N'Bàn',N'chiếc',20),
('MTB08',N'Ghế',N'chiếc',10);

--TẠO BẢNG SUDUNGDV
CREATE TABLE SUDUNGDV
(
SHDTHUEPHONG NUMERIC NOT NULL,
MATHIETBI CHAR(10) NOT NULL,
NGAYSUDUNG DATE,
SOLUONG INT,
CONSTRAINT KC_SUDUNGDV PRIMARY KEY (SHDTHUEPHONG,MATHIETBI,NGAYSUDUNG),
CONSTRAINT KN_SUDUNGDV_SHDTHUEPHONG FOREIGN KEY (SHDTHUEPHONG) REFERENCES THUEPHONG(SHDTHUEPHONG),
CONSTRAINT KN_SUDUNGDV_MATHIETBI FOREIGN KEY (MATHIETBI) REFERENCES THIETBI_DV(MATHIETBI),
);

INSERT INTO SUDUNGDV
VALUES 
(1,'MTB04','11/11/2021',1),
(2,'MTB01','11/11/2021',1),
(1,'MTB04','11/12/2021',1),
(3,'MTB04','12/12/2021',1),
(4,'MTB03','12/12/2021',1),
(6,'MTB04','11/29/2021',1),
(8,'MTB06','11/12/2021',1),
(1,'MTB05','11/12/2021',1);

--TẠO BẢNG THIETBI_PHONG
CREATE TABLE THIETBI_PHONG
(
MALOAIPHONG CHAR(10) NOT NULL,
MATHIETBI CHAR(10) NOT NULL,
SOLUONG INT NOT NULL,
CONSTRAINT KC_THIETBI_PHONG PRIMARY KEY (MALOAIPHONG,MATHIETBI),
CONSTRAINT KN_THIETBI_PHONG_MALOAIPHONG FOREIGN KEY (MALOAIPHONG) REFERENCES LOAIPHONG(MALOAIPHONG),
CONSTRAINT KN_THIETBI_PHONG_MATHIETBI FOREIGN KEY (MATHIETBI) REFERENCES THIETBI_DV(MATHIETBI),
);

INSERT INTO THIETBI_PHONG
VALUES
('MLP01','MTB01',2),
('MLP01','MTB02',1),
('MLP01','MTB03',1),
('MLP01','MTB04',1),
('MLP02','MTB05',1),
('MLP02','MTB01',1),
('MLP02','MTB02',1),
('MLP02','MTB03',1),
('MLP02','MTB06',1),
('MLP03','MTB01',2),
('MLP03','MTB03',1),
('MLP03','MTB04',2),
('MLP03','MTB05',1),
('MLP03','MTB06',2),
('MLP03','MTB07',1);

--VIEW
--view_list_Phong - LM Quang
DROP VIEW IF EXISTS view_list_Phong 
GO
CREATE view view_list_Phong
AS
    SELECT D.MAPHONG, L.LOAIPHONG, CAST(D.TINHTRANG AS BIT) AS TINHTRANG, D.MALOAIPHONG FROM DMPHONG D, LOAIPHONG L WHERE D.MALOAIPHONG = L.MALOAIPHONG
GO
SELECT * FROM view_list_Phong
GO

--VIEW TỔNG SỐ NHÂN VIÊN NAM, TỔNG SỐ NHÂN VIÊN NỮ VÀ TỔNG SỐ TẤT CẢ NHÂN VIÊN
DROP VIEW IF EXISTS view_soNV
GO
CREATE VIEW view_soNV AS
SELECT RIGHT(dbo.sl_NV(N'NAM'),1) AS SONHANVIENNAM,
RIGHT(dbo.sl_NV(N'NỮ'),1) AS SONHANVIENNU,
RIGHT(dbo.sl_NV(N'ALL'),1) AS TONGSONHANVIEN
GO
SELECT * FROM view_soNV
GO


--Tạo view hiển thị mã phòng và số hóa đơn chưa thanh toán - TM Quang
DROP VIEW IF EXISTS view_hoaDon
GO
CREATE VIEW view_hoaDon AS
SELECT DISTINCT T.MAPHONG, C.SHDTHUEPHONG
FROM THUEPHONG T, KHACHHANG K, CHITIETTHUEPHONG C
WHERE T.SHDTHUEPHONG not in (select SHDTHUEPHONG from HDTHANHTOANPHONG)
and T.SHDTHUEPHONG = C.SHDTHUEPHONG and K.MAKHACH = C.MAKHACH
GO
SELECT * FROM view_hoaDon

--Tạo view hiển thị thông tin của nhân viên và số hóa đơn tạo được trong năm nay - TM Quang
DROP VIEW IF EXISTS view_NV_hoaDon 
GO
CREATE VIEW view_NV_hoaDon AS
SELECT NV.MANHANVIEN, NV.HOTEN, COUNT(SHDTHUEPHONG) AS TongSoHoaDon
FROM NHANVIEN NV LEFT JOIN THUEPHONG T ON NV.MANHANVIEN = T.MANHANVIEN
WHERE YEAR(NGAYTHUE) = 2021 --YEAR(GETDATE())
GROUP BY NV.MANHANVIEN, NV.HOTEN
GO
SELECT * FROM view_NV_hoaDon

----view in ra danh sach phong da duoc thue(THANH)
DROP VIEW IF EXISTS VIEW_TP
GO
CREATE VIEW VIEW_TP
AS
SELECT DISTINCT THUEPHONG.MAPHONG, CHITIETTHUEPHONG.SHDTHUEPHONG 
FROM THUEPHONG,KHACHHANG,CHITIETTHUEPHONG 
WHERE THUEPHONG.SHDTHUEPHONG NOT IN (SELECT SHDTHUEPHONG 
FROM HDTHANHTOANPHONG)
AND THUEPHONG.SHDTHUEPHONG = CHITIETTHUEPHONG.SHDTHUEPHONG AND KHACHHANG.MAKHACH = CHITIETTHUEPHONG.MAKHACH

GO
SELECT * FROM VIEW_TP

-- VIEW LIỆT KÊ danh sách các thiết bị được sử dụng cho từng loại phòng, danh sách in ra bao gồm maloaiphong
-- tenthietbi, soluong, đơn vị tính, giá tiền của thiết bị đó (NGUYEN GIANG THANH)
DROP VIEW IF EXISTS VIEW_THIETBI_PHONG
GO
CREATE VIEW VIEW_THIETBI_PHONG
AS
SELECT MALOAIPHONG,THIETBI_PHONG.MATHIETBI, TENTHIETBI, SOLUONG, DVT, GIATIEN
FROM THIETBI_PHONG
LEFT JOIN THIETBI_DV ON THIETBI_PHONG.MATHIETBI = THIETBI_DV.MATHIETBI

GO
SELECT * FROM VIEW_THIETBI_PHONG

--THỦ TỤC
--Kiểm tra tài khoản, mật khẩu của nhân viên - TM Quang
DROP PROC IF EXISTS sp_check_login
GO
CREATE PROC sp_check_login(@manv CHAR(10), @pass VARCHAR(20)) AS
BEGIN
	SELECT MANHANVIEN, HOTEN FROM NHANVIEN WHERE MANHANVIEN = @manv AND MATKHAU = @pass
END
GO

--Tạo thủ tục để chèn, cập nhật, xóa dữ liệu trong bảng THIETBI_PHONG - TM Quang
DROP PROC IF EXISTS sp_ins_THIETBI_PHONG
GO
CREATE PROC sp_ins_THIETBI_PHONG (@option INT, @MALOAIPHONG CHAR(10), @MATHIETBI CHAR(10), @SOLUONG INT) AS
BEGIN
IF (@option = 1)
	BEGIN
		INSERT THIETBI_PHONG VALUES (@MALOAIPHONG, @MATHIETBI, @SOLUONG);
	END
ELSE IF (@option = 2)
	BEGIN
		UPDATE THIETBI_PHONG SET SOLUONG = @SOLUONG WHERE MALOAIPHONG = @MALOAIPHONG AND MATHIETBI = @MATHIETBI;
	END 
ELSE 
	BEGIN
		DELETE THIETBI_PHONG WHERE MALOAIPHONG = @MALOAIPHONG AND MATHIETBI = @MATHIETBI;
	END
END
GO

--Tạo thủ tục lấy thông tin khách hàng theo một phòng - TM Quang
DROP PROC IF EXISTS sp_Phong_KH
GO
CREATE PROC sp_Phong_KH (@msphong CHAR(20)) AS
BEGIN
	SELECT K.*, T.MAPHONG, C.SHDTHUEPHONG, NGAYTHUE, NGAYTRA
	FROM KHACHHANG K LEFT JOIN CHITIETTHUEPHONG C ON K.MAKHACH = C.MAKHACH
	LEFT JOIN THUEPHONG T ON T.SHDTHUEPHONG = C.SHDTHUEPHONG
	WHERE T.MAPHONG = @msphong
END
GO

--Tạo thủ tục chèn, cập nhật dữ liệu vào bảng KHACHHANG - TM Quang
DROP PROC IF EXISTS sp_ins_KH
GO
CREATE PROC sp_ins_KH(@option INT, @MSKH CHAR(10), @HOTEN NVARCHAR(100), @GIOITINH BIT, @DIACHI NVARCHAR(50),  @CMND CHAR(20), @DIENTHOAI VARCHAR(15)) AS
BEGIN
	IF (@option = 1)
	BEGIN
		DECLARE @oldMkh CHAR(10)
		DECLARE @newMkh CHAR(10)
		SET @oldMkh = (select top 1 MAKHACH from KHACHHANG order by MAKHACH desc)
		SET @newMkh = 'K' + CAST((CAST(REPLACE(@oldMkh,'K','') AS INT) + CAST(@MSKH AS INT)) AS CHAR(10))
		INSERT INTO KHACHHANG VALUES (@newMkh, @HOTEN, @GIOITINH, @DIACHI, @CMND, @DIENTHOAI)
	END
	ELSE IF (@option = 2)
	BEGIN
		UPDATE KHACHHANG SET HOTEN = @HOTEN, GIOITINH = @GIOITINH, DIACHI = @DIACHI, CMND = @CMND, DIENTHOAI = @DIENTHOAI
		WHERE MAKHACH = @MSKH
	END
END
GO

--Tạo thủ tục chèn, cập nhật dữ liệu trong bảng CHITIETTHUEPHONG - TM Quang
DROP PROC IF EXISTS sp_ins_CHITIETTHUEPHONG
GO
CREATE PROC sp_ins_CHITIETTHUEPHONG(@option INT, @SHDTHUEPHONG NUMERIC, @MSKH CHAR(10)) AS
BEGIN
	IF (@option = 1)
	BEGIN
		INSERT INTO CHITIETTHUEPHONG VALUES (@SHDTHUEPHONG, @MSKH)
	END
	ELSE IF (@option = 2)
	BEGIN
		UPDATE CHITIETTHUEPHONG SET MAKHACH = @MSKH
		WHERE SHDTHUEPHONG = @SHDTHUEPHONG
	END
END
GO

--frmLoaiPhong
--sp_List_LoaiPhong - LM Quang
DROP PROC IF EXISTS sp_List_LoaiPhong
GO
CREATE PROC sp_List_LoaiPhong
AS
BEGIN
    SELECT * FROM LOAIPHONG
END
GO

--sp_del_LoaiPhong - LM Quang
DROP PROC IF EXISTS sp_del_LoaiPhong
GO
CREATE PROC sp_del_LoaiPhong @MSLOAIPHONG CHAR(10)
AS
BEGIN
    DELETE LOAIPHONG WHERE MALOAIPHONG = @MSLOAIPHONG
END
GO

--sp_ins_LoaiPhong - LM Quang
DROP PROC IF EXISTS sp_ins_LoaiPhong
GO
CREATE PROC sp_ins_LoaiPhong(@option INT, @MSLOAIPHONG CHAR(10), @LOAIPHONG NVARCHAR(50), @GIATIEN MONEY) AS
BEGIN
IF (@option = 1)
    BEGIN
        INSERT LOAIPHONG VALUES (@MSLOAIPHONG, @LOAIPHONG, @GIATIEN);
    END
ELSE IF (@option = 2)
    BEGIN
        UPDATE LOAIPHONG SET LOAIPHONG = @LOAIPHONG, GIATIEN = @GIATIEN WHERE MALOAIPHONG = @MSLOAIPHONG;
    END 
ELSE 
    BEGIN
        DELETE LOAIPHONG WHERE MALOAIPHONG = @MSLOAIPHONG ;
    END
END
GO


--frmNV
--sp_list_NV - LM Quang
DROP PROC IF EXISTS sp_list_NV
GO
CREATE PROC sp_list_NV
AS
BEGIN 
    SELECT * FROM NHANVIEN
END
GO
EXEC sp_list_NV

--sp_del_NhanVien - LM Quang
DROP PROC IF EXISTS sp_del_NhanVien
GO
CREATE PROC sp_del_NhanVien @MSNV CHAR(10)
AS
BEGIN
    DELETE NHANVIEN WHERE MANHANVIEN = @MSNV
END
GO

--sp_ins_NV - LM Quang
DROP PROC IF EXISTS sp_ins_NV
GO
CREATE PROC sp_ins_NV @option INT, @MSNV CHAR(10), @HOTENNV NVARCHAR(100), @MatKhau CHAR(20), @NGAYSINHNV DATE, @GIOITINHNV BIT, @DIACHINV NVARCHAR(100), @DIENTHOAINV VARCHAR(20), @NGAYVAOLAM DATE
AS
BEGIN
    IF(@option = 1)
    BEGIN
        INSERT INTO NHANVIEN VALUES(@MSNV, @MatKhau, @HOTENNV, @NGAYSINHNV, @GIOITINHNV, @DIACHINV, @DIENTHOAINV, @NGAYVAOLAM)
    END
    ELSE IF(@option = 2)
    BEGIN
        UPDATE NHANVIEN SET MANHANVIEN = @MSNV, MATKHAU = @MatKhau, HOTEN = @HOTENNV, NGAYSINH = @NGAYSINHNV, GIOITINH = @GIOITINHNV, DIACHI = @DIACHINV, SODIENTHOAI = @DIENTHOAINV, NGAYVAOLAM = @NGAYVAOLAM WHERE MANHANVIEN = @MSNV
    END
    ELSE
    BEGIN
        DELETE NHANVIEN WHERE MANHANVIEN = @MSNV
    END
END
GO

--frmPhong
--sp_del_Phong - LM Quang
DROP PROC IF EXISTS sp_del_Phong
GO
CREATE PROC sp_del_Phong @msPhong CHAR(20)
AS
BEGIN
    DELETE DMPHONG WHERE MAPHONG = @msPhong
END
GO

--sp_ins_Phong - LM Quang
DROP PROC IF EXISTS sp_ins_Phong 
GO
CREATE PROC sp_ins_Phong  @option INT, @MSPHONG CHAR(20), @MSLOAIPHONG CHAR(10), @TINHTRANG BIT
AS
BEGIN
IF(@option = 1)
    BEGIN
        INSERT INTO DMPHONG VALUES(@MSPHONG, @MSLOAIPHONG, @TINHTRANG)
    END
ELSE IF(@option = 2)
    BEGIN
        UPDATE DMPHONG SET MALOAIPHONG = @MSLOAIPHONG, TINHTRANG =@TINHTRANG WHERE MAPHONG =@MSPHONG;
    END
ELSE
    BEGIN
        DELETE DMPHONG WHERE MAPHONG = @MSPHONG
    END
END
GO

--Thủ tục dùng để thêm mới, cập nhật thiết bị ở bảng thiết bị dịch vụ (NGUYEN GIANG THANH)
DROP PROCEDURE IF EXISTS sp_ins_THIETBI_DV
GO
CREATE procedure sp_ins_THIETBI_DV
    @option         char(1),
    @MATHIETBI        char(10),
    @TENTHIETBI        nvarchar(50),
    @DVT            nvarchar(10),
    @GIATIEN        money
    as
    begin
    if (@option=1)
        insert into THIETBI_DV(MATHIETBI,TENTHIETBI,DVT,GIATIEN) values (@MATHIETBI,@TENTHIETBI,@DVT,@GIATIEN)
    else if (@option=2)
        Update THIETBI_DV     set TENTHIETBI = @TENTHIETBI, DVT=@DVT,GIATIEN=@GIATIEN WHERE MATHIETBI=@MATHIETBI
    END
GO

---Tạo thủ tục xóa thiết bị ra khỏi bảng THIETBI_DV, kiểm tra nếu tồn tại mã thiết bị tương tự ở bảng THIETBI_PHONG thì không cho phép xóa (NGUYEN GIANG THANH)
DROP PROC IF EXISTS sp_del_THIETBI_DV
GO
CREATE procedure sp_del_THIETBI_DV
    @MATHIETBI        char(10)        
    as
    begin
        if  NOT EXISTS (select * from THIETBI_PHONG where MATHIETBI=@MATHIETBI)
            delete from THIETBI_DV where MATHIETBI = @MATHIETBI
                    else
            RAISERROR (N'Không thể xóa thiết bị này',16,1)
    end
GO
/*EXEC sp_del_THIETBI_DV 'MTB01'
SELECT * FROM THIETBI_DV
SELECT * FROM THIETBI_PHONG*/

--sp_ins_SuDung_DV: thêm mới hoặc cập nhật tình hình sử dụng các dịch vụ của khách(THANH)
DROP PROCEDURE IF EXISTS sp_ins_SuDung_DV
GO
CREATE procedure sp_ins_SuDung_DV
	@option 		int,
	@SHDGTHUEPHONG	numeric,
	@MSTB			char(10),
	@NGAYSD			datetime,
	@SOLUONG		int
	as
	begin
	if (@option=1)
		insert into SUDUNGDV(SHDTHUEPHONG,MATHIETBI,NGAYSUDUNG,SOLUONG) values (@SHDGTHUEPHONG,@MSTB,@NGAYSD,@SOLUONG)
	else if (@option=2)
		Update SUDUNGDV	set MATHIETBI=@MSTB,NGAYSUDUNG=@NGAYSD, SOLUONG=@SOLUONG WHERE SHDTHUEPHONG = @SHDGTHUEPHONG
		end
GO


---Thủ tục dùng để Thêm thiết bị, cập nhật lại số lượng thiết bị và xóa thiết bị cho từng mã loại phòng (NGUYEN GIANG THANH)
DROP PROC IF EXISTS sp_ins_THIETBI_PHONG
GO
CREATE PROC sp_ins_THIETBI_PHONG (@option INT, @MALOAIPHONG CHAR(10), @MATHIETBI CHAR(10), @SOLUONG INT) AS
BEGIN
IF (@option = 1)
    BEGIN
        INSERT THIETBI_PHONG VALUES (@MALOAIPHONG, @MATHIETBI, @SOLUONG);
    END
ELSE IF (@option = 2)
    BEGIN
        UPDATE THIETBI_PHONG SET SOLUONG = @SOLUONG WHERE MALOAIPHONG = @MALOAIPHONG AND MATHIETBI = @MATHIETBI;
    END 
ELSE 
    BEGIN
        DELETE THIETBI_PHONG WHERE MALOAIPHONG = @MALOAIPHONG AND MATHIETBI = @MATHIETBI;
    END
END

--liệt kê danh sách các thông tin của một hợp đồng thuê phòng(THANH)
DROP PROC IF EXISTS sp_list_SuDungDV
GO
CREATE PROC sp_list_SuDungDV
@SOHDONGTHUEPHONG numeric
as
select SuDungDV.*, THIETBI_DV.*,NGAYTHUE from SUDUNGDV, THIETBI_DV, THUEPHONG
where SUDUNGDV.SHDTHUEPHONG=@SOHDONGTHUEPHONG and SUDUNGDV.MATHIETBI=THIETBI_DV.MATHIETBI and THUEPHONG.SHDTHUEPHONG=SUDUNGDV.SHDTHUEPHONG
GO

SELECT * FROM SUDUNGDV
SELECT * FROM THIETBI_DV
--Thủ tục dùng để thêm hợp đồng thanh toán(NGUYEN GIANG THANH)
DROP PROC IF EXISTS sp_ins_HDThanhToan
GO
CREATE procedure sp_ins_HDThanhToan
    @SOHDTHUEPHONG    numeric,
    @MSNV            char(10),
    @NGAYTHANHTOAN            datetime,
    @TIENPHONG        money
    as
    begin
        insert into HDTHANHTOANPHONG(SHDTHUEPHONG,MANHANVIEN,NGAYTHANHTOAN,TIENPHONG) 
        values (@SOHDTHUEPHONG,@MSNV,@NGAYTHANHTOAN,@TIENPHONG)
    end
GO

--HÀM
--Hàm lấy ra mã khách hàng vừa thêm vào bảng KHACHHANG - TM Quang
DROP FUNCTION IF EXISTS fn_topKH
GO
CREATE FUNCTION fn_topKH()
RETURNS TABLE
AS 
	RETURN
		select top 1 MAKHACH from KHACHHANG order by MAKHACH desc
GO

--Hàm lấy ra số hóa đơn vừa thêm vào bảng THUEPHONG - TM Quang
DROP FUNCTION IF EXISTS fn_topSHD
GO
CREATE FUNCTION fn_topSHD()
RETURNS TABLE
AS 
	RETURN
		select top 1 SHDTHUEPHONG from THUEPHONG order by SHDTHUEPHONG desc
GO

--HÀM TÍNH SỐ NHÂN VIÊN NAM VÀ NHÂN VIÊN NỮ - LM Quang
DROP FUNCTION IF EXISTS sl_NV
GO
CREATE FUNCTION sl_NV (@gt NVARCHAR(10))
RETURNS NVARCHAR(100)
AS
BEGIN
    DECLARE @sl INT
    DECLARE @str NVARCHAR(100)
    IF(@gt = N'Nữ' OR @gt = N'nữ' OR @gt = N'NỮ')
    BEGIN
        SELECT @sl = COUNT(MANHANVIEN) FROM NHANVIEN WHERE GIOITINH = 1
        SELECT @str = (N'Tổng số nhân viên nữ là ' + CAST(@sl AS NVARCHAR))
    END
    ELSE IF(@gt = N'Nam' OR @gt = N'nam' OR @gt = N'NAM') 
    BEGIN
        SELECT @sl = COUNT(MANHANVIEN) FROM NHANVIEN WHERE GIOITINH = 0
        SELECT @str = (N'Tổng số nhân viên nam là ' + CAST(@sl AS NVARCHAR))
    END
    ELSE 
    BEGIN
        SELECT @sl = COUNT(MANHANVIEN) FROM NHANVIEN
        SELECT @str = (N'Tổng số nhân viên là ' + CAST(@sl AS NVARCHAR))
    END
    RETURN @str
END
GO
PRINT dbo.sl_NV(N'Nữ') 
GO

--HÀM IN RA THÔNG TIN CÁC PHÒNG THEO LOẠI PHÒNG - LM Quang
DROP FUNCTION IF EXISTS infor_Phong
GO
CREATE FUNCTION infor_Phong (@name_phong NVARCHAR(50))
RETURNS @table_infor TABLE(MALOAIPHONG CHAR(10), MAPHONG CHAR(10), LOAIPHONG NVARCHAR(50), GIATIEN MONEY, TINHTRANG BIT)
AS
BEGIN
INSERT INTO @table_infor
SELECT L.MALOAIPHONG, MAPHONG, LOAIPHONG, GIATIEN, TINHTRANG  FROM LOAIPHONG L, DMPHONG D WHERE LOAIPHONG = @name_phong
RETURN
END
GO    
SELECT * FROM infor_Phong(N'Phòng vip nè')

-- Hàm in ra danh sách bao gồm thông tin của các trang thiết bị có trong từng loại phòng (NGUYEN GIANG THANH)
DROP FUNCTION IF EXISTS fc_list_TBTrangThietBi
GO
CREATE function fc_list_TBTrangThietBi()
returns table
as
return
select THIETBI_PHONG.MALOAIPHONG,THIETBI_PHONG.MATHIETBI,LOAIPHONG.LOAIPHONG,THIETBI_DV.TENTHIETBI,THIETBI_PHONG.SOLUONG 
from LOAIPHONG , THIETBI_DV , THIETBI_PHONG 
where LOAIPHONG.MALOAIPHONG=THIETBI_PHONG.MALOAIPHONG and THIETBI_DV.MATHIETBI=THIETBI_PHONG.MATHIETBI

GO
SELECT * FROM fc_list_TBTrangThietBi()

-- Hàm để in ra thông tin về các thiết bị đã sử dụng của một khách hàng với mã khách là tham số đầu vào. 
--Thông tin in ra gồm mã thiết bị, tên thiết bị, DVT, Giá Tiền, số lượng   (NGUYEN GIANG THANH)
DROP FUNCTION IF EXISTS FC_THONGTINKHACHHANG
GO
CREATE FUNCTION FC_THONGTINKHACHHANG(@MAKHACH CHAR(10))
RETURNS @TABLE TABLE( MATHIETBI CHAR(10), TENTHIETBI NVARCHAR(50), DVT NVARCHAR(10), GIATIEN MONEY, SOLUONG INT)
AS
BEGIN
INSERT INTO @TABLE
SELECT SUDUNGDV.MATHIETBI,TENTHIETBI, DVT, GIATIEN, SUM(SUDUNGDV.SOLUONG)
FROM THIETBI_DV
LEFT JOIN SUDUNGDV ON THIETBI_DV.MATHIETBI = SUDUNGDV.MATHIETBI
LEFT JOIN CHITIETTHUEPHONG ON SUDUNGDV.SHDTHUEPHONG = CHITIETTHUEPHONG.SHDTHUEPHONG
WHERE MAKHACH = @MAKHACH
GROUP BY SUDUNGDV.MATHIETBI, TENTHIETBI, DVT,GIATIEN
RETURN
END
GO
SELECT * FROM FC_THONGTINKHACHHANG ('K01')


--TRIGGER
--Tạo trigger cập nhật tình trạng phòng sau khi thuê phòng - TM Quang
DROP TRIGGER IF EXISTS trigger_tinhTrangPhong 
GO
CREATE TRIGGER trigger_tinhTrangPhong 
ON THUEPHONG
AFTER INSERT
AS BEGIN
	DECLARE @msphong CHAR(20)
	SELECT @msphong = (select MAPHONG from inserted)
	UPDATE DMPHONG SET TINHTRANG = 1 WHERE DMPHONG.MAPHONG = @msphong
END
GO

--Tạo trigger để khi chèn dữ liệu vào bảng THUEPHONG, NGAYTRA không được bé hơn NGAYTHUE - TM Quang
DROP TRIGGER IF EXISTS trigger_NgayTra 
GO
CREATE TRIGGER trigger_NgayTra
ON THUEPHONG
FOR INSERT
AS BEGIN
	DECLARE @ngaythue DATE
	DECLARE @ngaytra DATE
	SET @ngaythue = (select NGAYTHUE from inserted)
	SET @ngaytra = (select NGAYTRA from inserted)
	IF (@ngaythue > @ngaytra) 
		BEGIN
			RAISERROR (N'Ngày trả không được trước ngày thuê',16,1)
			ROLLBACK TRANSACTION
		END
END

--Tạo trigger để khi cập nhật dữ liệu vào bảng THUEPHONG, NGAYTRA không được bé hơn NGAYTHUE - TM Quang
DROP TRIGGER IF EXISTS trigger_update_NgayTra 
GO
CREATE TRIGGER trigger_update_NgayTra
ON THUEPHONG
FOR UPDATE
AS BEGIN
	DECLARE @ngaythue DATE
	DECLARE @ngaytra DATE
	IF UPDATE(NGAYTHUE)
	BEGIN
		SET @ngaythue = (select NGAYTHUE from inserted)
		SET @ngaytra = (select T.NGAYTRA from THUEPHONG T, deleted WHERE T.SHDTHUEPHONG = deleted.SHDTHUEPHONG)
		IF (@ngaythue > @ngaytra) 
		BEGIN
			RAISERROR (N'Ngày trả không được trước ngày thuê',16,1)
			ROLLBACK TRANSACTION
		END
	END
	ELSE IF UPDATE(NGAYTRA)
	BEGIN
		SET @ngaythue = (select T.NGAYTHUE from THUEPHONG T, deleted WHERE T.SHDTHUEPHONG = deleted.SHDTHUEPHONG)
		SET @ngaytra = (select NGAYTRA from inserted)
		IF (@ngaythue > @ngaytra) 
		BEGIN
			RAISERROR (N'Ngày trả không được trước ngày thuê',16,1)
			ROLLBACK TRANSACTION
		END
	END
END

--TRIGGER KIỂM TRA TUỔI CỦA NHÂN VIÊN - LM Quang
DROP TRIGGER IF EXISTS check_ageNV
GO
CREATE TRIGGER check_ageNV
ON NHANVIEN
    AFTER UPDATE, INSERT
AS
BEGIN
DECLARE @age INT
SET @age = (SELECT YEAR(GETDATE()) - YEAR(NGAYSINH) AS TUOINV FROM inserted)
IF(@age < 18)
    BEGIN
    RAISERROR(N'Nhân viên được nhập dưới 18 tuổi',16,1)
    ROLLBACK TRANSACTION
    END
ELSE IF(@age > 65)
BEGIN
    RAISERROR(N'Nhân viên được nhập trên 65 tuổi',16,1)
    ROLLBACK TRANSACTION
    END
END
GO
--TRIGGER KHI XÓA MỘT LOẠI PHÒNG THÌ CÁC THÔNG TIN PHÒNG THUỘC LOẠI PHÒNG ĐÓ CŨNG SẼ BỊ XÓA - LM Quang
DROP TRIGGER IF EXISTS del_LOAIPHONG
GO
CREATE TRIGGER del_LOAIPHONG
ON LOAIPHONG
    FOR DELETE
AS
BEGIN
    DELETE DMPHONG WHERE MALOAIPHONG = (SELECT MALOAIPHONG FROM deleted)
    SELECT * FROM LOAIPHONG
END
GO
INSERT INTO LOAIPHONG VALUES('MLP04',N'Phòng bình dân',5)
INSERT INTO DMPHONG VALUES('MP25','MLP04',0)
INSERT INTO DMPHONG VALUES('MP26','MLP04',1)
GO
/*ALTER TABLE DMPHONG DROP CONSTRAINT KN_DMPHONG
GO
DELETE LOAIPHONG WHERE MALOAIPHONG = 'MLP04'
GO
ALTER TABLE DMPHONG ADD CONSTRAINT KN_DMPHONG FOREIGN KEY (MALOAIPHONG) REFERENCES LOAIPHONG(MALOAIPHONG)
*/

--Tạo trigger để kiểm tra dữ liệu nhập vào cột MATHIETBI trong bảng THIETBI_PHONG phải là dữ liệu đã tồn tại trong cột MATHIETBI của bảng THIETBI_DV (NGUYEN GIANG THANH)
DROP TRIGGER IF EXISTS CHECK_TRIGGER_MATHIETBI
GO
CREATE TRIGGER CHECK_TRIGGER_MATHIETBI
ON  THIETBI_PHONG
FOR INSERT
AS
IF(SELECT MATHIETBI FROM inserted) NOT IN (SELECT MATHIETBI FROM THIETBI_DV)
BEGIN
RAISERROR (N'Không thể chèn thiết bị',16,1)
ROLLBACK TRANSACTION
END
ELSE IF (SELECT MALOAIPHONG FROM inserted) NOT IN (SELECT MALOAIPHONG FROM LOAIPHONG)
BEGIN
RAISERROR (N'Không tồn tại mã loại phòng này',16,1)
ROLLBACK TRANSACTION
END
GO
/*ALTER TABLE THIETBI_PHONG
DROP CONSTRAINT KN_THIETBI_PHONG_MATHIETBI
ALTER TABLE THIETBI_PHONG
DROP CONSTRAINT KN_THIETBI_PHONG_MALOAIPHONG
ALTER TABLE THIETBI_PHONG
DROP CONSTRAINT KC_THIETBI_PHONG

 INSERT INTO THIETBI_PHONG
 VALUES('MLP06','MTB01',6)
 SELECT * FROM THIETBI_DV
 SELECT * FROM THIETBI_PHONG*/

--Tạo trigger cho phép thêm thiết bị , SOLUONG không được lớn hơn SOLUONG ở bảng THIETBI_PHONG và bắt buộc phải  (NGUYEN GIANG THANH)
DROP TRIGGER IF EXISTS DEL_TRIGGER_THIETBI
GO
CREATE TRIGGER DEL_TRIGGER_THIETBI
ON THIETBI_DV
FOR DELETE
AS
IF (SELECT MATHIETBI FROM deleted ) IN (SELECT MATHIETBI FROM THIETBI_PHONG)
BEGIN
RAISERROR (N'Không xóa được thiết bị này.',16,1)
ROLLBACK TRANSACTION
END
ELSE
PRINT(N'Đã xóa thiết bị')
GO

--Bảo mật phân quyền - TM Quang
--Tạo role creator, trao các quyền select, insert, update, delete, alter, control ở schema dbo cho creator
GO
CREATE ROLE creator
GRANT SELECT, INSERT, UPDATE, DELETE, ALTER, CONTROL ON SCHEMA :: dbo TO creator;

--Tạo các login và user cho từng thành viên trong nhóm
GO
CREATE LOGIN TMQuang WITH PASSWORD = 'TMQ123'
CREATE USER TMQuang FOR LOGIN TMQuang;

CREATE LOGIN LMQuang WITH PASSWORD = 'LMQ123'
CREATE USER LMQuang FOR LOGIN LMQuang;

CREATE LOGIN NGThanh WITH PASSWORD = 'NGT123'
CREATE USER NGThanh FOR LOGIN NGThanh;

--Thêm các user vào role creator
GO
EXEC Sp_addRoleMember 'creator', 'TMQuang'
EXEC Sp_addRoleMember 'creator', 'LMQuang'
EXEC Sp_addRoleMember 'creator', 'NGThanh'

